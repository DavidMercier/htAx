function [] = openReadInFig()
%OPENREADINFIG opens the first window of the GUI

figLeft = 200;
figBottom = 500;
figWidth = 900;
figHeight = 500;

XRDFolder = '';
EDXFile = '';
%saveFile = '';
restoreFile = '';
saveRestoreFile = '';
ECFolder = '';
XRDDatabaseFolder = '';
EDXCoordFile = '';
XRDFile = '';
filenameInfo = '';

fReadInFig = figure(...
    'Visible', 'off', ...
    'Position', [figLeft figBottom figWidth figHeight], ...
    'Name', 'Open Analysis');

% set background to white
figure(fReadInFig);
set(gcf, 'color', 'w');

XRDXCoord = 0;
XRDYCoord = 0;
ECXCoord = 0;
ECYCoord = 0;
XRDDelim = '';
ECDelim = '';
XRDEnd = '';
ECEnd = '';
labelA = '';
labelB = '';
labelC = '';

% tabs
%tabsReadIn = uitabgroup('Parent', fReadInFig);
%tabsXRDFolder = uitab('Parent', tabsReadIn, 'Title', 'XRD Folder');
%tabsXRDFile = uitab('Parent', tabsReadIn, 'Title', 'XRD File');

% title

%{
titleBottomOffset = 0.9;
titleWidth = 0.2;
titleHeight = 0.05;
titleMiddleHor = 0.5 - titleWidth / 2;
titleFontSize = 16;

htextTitle = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'Import Data', ...
    'FontSize', titleFontSize, ...
    'Units', 'Normalized', ...
    'Position', [titleMiddleHor titleBottomOffset ...
    titleWidth titleHeight]);
%}

% labels

leftColOffset = 0.05;
topRowOffset = 0.8;
textWidth = 0.1;
textHeight = 0.05;
textSpacingVert = 0.08;

htextXRD = uicontrol(fReadInFig, 'Style', 'text', 'String', 'XRD (folder)', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset topRowOffset textWidth textHeight]);
htextXRDFile = uicontrol(fReadInFig, 'Style', 'text', ...
    'String', 'XRD (1 file)', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - textSpacingVert) ...
    textWidth textHeight]);
htextEDX = uicontrol(fReadInFig, 'Style', 'text', 'String', 'EDX', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 3 * textSpacingVert) ...
    textWidth textHeight]);
htextEDXCoord = uicontrol(fReadInFig, 'Style', 'text', ...
    'String', 'EDX Coords', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 4 * textSpacingVert) ...
    textWidth textHeight]);
htextEC = uicontrol(fReadInFig, 'Style', 'text', 'String', 'EC', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 2 * textSpacingVert) ...
    textWidth textHeight]);
htextXRDDatabase = uicontrol(fReadInFig, 'Style', 'text', 'String', 'XRD DB', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 5 * textSpacingVert) ...
    textWidth textHeight]);
%{
htextSave = uicontrol(fReadInFig, 'Style', 'text', 'String', 'Save to', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 5 * textSpacingVert) ...
    textWidth textHeight]);
    %}
htextRestore = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'Restore', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 8 * textSpacingVert) ...
    textWidth textHeight]);

%{
htextSaveRestore = uicontrol(fReadInFig, 'Style', 'text', ...
    'String', 'Save to', ...
    'Units', 'Normalized', ...
    'Position', [leftColOffset (topRowOffset - 9 * textSpacingVert) ...
    textWidth textHeight]);
    %}

% buttons

colSpacing = 0.15;

buttonWidth = textWidth;
buttonHeight = textHeight;
buttonMiddleHor = 0.5 - buttonWidth / 2;

hbuttonXRD = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select folder', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) topRowOffset ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonXRDCallback});
hbuttonXRDFile = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) (topRowOffset - textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonXRDFileCallback});
hbuttonEDX = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 3 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonEDXCallback});
hbuttonEDXCoord = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 4 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonEDXCoordCallback});
hbuttonEC = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select folder', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 2 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonECCallback});
hbuttonXRDDatabase = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select folder', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 5 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonXRDDatabaseCallback});
%{
hbuttonSave = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 5 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonSaveCallback});
    %}
hbuttonImport = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Begin analysis', 'Units', 'Normalized', ...
    'Position', [buttonMiddleHor (topRowOffset - 6 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonImportCallback});
hbuttonRestoreFile = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 8 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonRestoreFileCallback});
%{
hbuttonSaveRestore = uicontrol(fReadInFig,'Style', 'pushbutton', ...
    'String', 'Select file', 'Units', 'Normalized', ...
    'Position', [(leftColOffset + colSpacing) ...
    (topRowOffset - 8 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonSaveRestoreCallback});
    %}
hbuttonRestore = uicontrol(fReadInFig, 'Style', 'pushbutton', ...
    'String', 'Restore', 'Units', 'Normalized', ...
    'Position', [buttonMiddleHor ...
    (topRowOffset - 9 * textSpacingVert) ...
    buttonWidth buttonHeight], ...
    'Callback', {@buttonRestoreCallback});

% filenames

fileLeftOffset = leftColOffset + colSpacing + buttonWidth + 0.05;
fileWidth = 0.2;
fileHeight = textHeight * 1.5;

htextXRDFolder = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset topRowOffset ...
    fileWidth fileHeight]);
htextXRDFileFile = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert) ...
    fileWidth fileHeight]);
htextEDXFile = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 3) ...
    fileWidth fileHeight]);
htextEDXCoordFile = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 4) ...
    fileWidth fileHeight]);
htextECFolder = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 2) ...
    fileWidth fileHeight]);
htextXRDDatabaseFolder = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 5) ...
    fileWidth fileHeight]);
%{
htextSaveFile = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 5) ...
    fileWidth fileHeight]);
    %}
htextRestoreFile = uicontrol(fReadInFig, 'Style', 'text', 'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 8) ...
    fileWidth fileHeight]);
%{
htextSaveRestoreFile = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', '', ...
    'Units', 'Normalized', ...
    'Position', [fileLeftOffset (topRowOffset - textSpacingVert * 9) ...
    fileWidth fileHeight]);
    %}

xCoordCol = fileLeftOffset + fileWidth + 0.03;
yCoordCol = xCoordCol + 0.08 + 0.03;
delimCol = yCoordCol + 0.08 + 0.03;
endCol = delimCol + 0.08 + 0.03;

heditXRDXCoord = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol topRowOffset 0.08 textHeight], ...
    'Callback', {@editCoordCallback, 0});
heditXRDYCoord = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [yCoordCol topRowOffset 0.08 textHeight], ...
    'Callback', {@editCoordCallback, 1});
heditXRDDelim = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [delimCol topRowOffset 0.08 textHeight], ...
    'Callback', {@editDelimCallback, 0});
heditXRDEnd = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [endCol topRowOffset 0.08 textHeight], ...
    'Callback', {@editDelimCallback, 2});
heditECXCoord = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol (topRowOffset - 2 * textSpacingVert) ...
    0.08 textHeight], ...
    'Callback', {@editCoordCallback, 2});
heditECYCoord = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [yCoordCol (topRowOffset - 2 * textSpacingVert) ...
    0.08 textHeight], ...
    'Callback', {@editCoordCallback, 3});
heditECDelim = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [delimCol (topRowOffset - 2 * textSpacingVert) ...
    0.08 textHeight], ...
    'Callback', {@editDelimCallback, 1});
heditECEnd = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'Units', 'Normalized', ...
    'Position', [endCol (topRowOffset - 2 * textSpacingVert) ...
    0.08 textHeight], ...
    'Callback', {@editDelimCallback, 3});
htextXCoord = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'x-coord', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol topRowOffset + textHeight + 0.03 0.08 textHeight]);
htextYCoord = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'y-coord', ...
    'Units', 'Normalized', ...
    'Position', [yCoordCol topRowOffset + textHeight + 0.03 0.08 textHeight]);
htextDelim = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'delim', ...
    'Units', 'Normalized', ...
    'Position', [delimCol topRowOffset + textHeight + 0.03 0.08 textHeight]);
htextEnd = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'ending', ...
    'Units', 'Normalized', ...
    'Position', [endCol topRowOffset + textHeight + 0.03 0.08 textHeight]);

% label names

labelOffset = 0.04 + 0.015;

htextLabelA = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'A', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight]);
heditLabelA = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'String', '', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol + 1 * labelOffset (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight], ...
    'Callback', {@editLabelCallback, 0});
htextLabelB = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'B', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol + 2 * labelOffset (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight]);
heditLabelB = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'String', '', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol + 3 * labelOffset (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight], ...
    'Callback', {@editLabelCallback, 1});
htextLabelC = uicontrol(fReadInFig, ...
    'Style', 'text', ...
    'String', 'C', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol + 4 * labelOffset (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight]);
heditLabelC = uicontrol(fReadInFig, ...
    'Style', 'edit', ...
    'String', '', ...
    'Units', 'Normalized', ...
    'Position', [xCoordCol + 5 * labelOffset (topRowOffset - textSpacingVert * 3) ...
    0.04 textHeight], ...
    'Callback', {@editLabelCallback, 2});

% make figure visible
fReadInFig.Visible = 'on';

%% callback functions

    function editLabelCallback(obj, evt, type)
        if type == 0
            labelA = obj.String;
        elseif type == 1
            labelB = obj.String;
        else 
            labelC = obj.String;
        end
    end

    function editCoordCallback(obj, evt, type)
        if type == 0
            XRDXCoord = str2double(obj.String);
        elseif type == 1
            XRDYCoord = str2double(obj.String);
        elseif type == 2
            ECXCoord = str2double(obj.String);
        else
            ECYCoord = str2double(obj.String);
        end
    end

    function editDelimCallback(obj, evt, type)
        if type == 0
            XRDDelim = obj.String;
        elseif type == 1
            ECDelim = obj.String;
        elseif type == 2
            XRDEnd = obj.String;
        else
            ECEnd = obj.String;
        end
    end

    function buttonXRDCallback(obj, evt)
        XRDFolder = uigetdir;
        set(htextXRDFolder, 'String', XRDFolder);
    end

    function buttonXRDFileCallback(obj, evt)
        [XRDFilename, XRDPathname] = uigetfile;
        XRDFile = strcat(XRDPathname, XRDFilename);
        set(htextXRDFileFile, 'String', XRDFile);
        filenameInfo.xrdFile = 1;
    end

    function buttonEDXCallback(obj, evt)
        [EDXFilename, EDXPathname] = uigetfile;
        EDXFile = strcat(EDXPathname, EDXFilename);
        set(htextEDXFile, 'String', EDXFile);
    end

    function buttonEDXCoordCallback(obj, evt)
        [EDXCoordFilename, EDXCoordPathname] = uigetfile;
        EDXCoordFile = strcat(EDXCoordPathname, EDXCoordFilename);
        set(htextEDXCoordFile, 'String', EDXCoordFile);
    end

    function buttonECCallback(obj, evt)
        ECFolder = uigetdir;
        set(htextECFolder, 'String', ECFolder);
    end

    function buttonXRDDatabaseCallback(obj, evt)
        XRDDatabaseFolder = uigetdir;
        set(htextXRDDatabaseFolder, 'String', XRDDatabaseFolder);
    end
%{
    function buttonSaveCallback(obj, evt)
        [saveFilename, savePathname] = uigetfile;
        saveFile = strcat(savePathname, saveFilename);
        set(htextSaveFile, 'String', saveFile);
    end
%}

    function buttonImportCallback(obj, evt)
        
        filenameInfo.xrdX = XRDXCoord;
        filenameInfo.xrdY = XRDYCoord;
        filenameInfo.ecX = ECXCoord;
        filenameInfo.ecY = ECYCoord;
        filenameInfo.xrdDelim = XRDDelim;
        filenameInfo.ecDelim = ECDelim;
        filenameInfo.xrdEnd = XRDEnd;
        filenameInfo.ecEnd = ECEnd;
        filenameInfo.labelA = labelA;
        filenameInfo.labelB = labelB;
        filenameInfo.labelC = labelC;
        
        %{
        if isempty(htextXRDFolder) == 1
            filenameInfo.xrdFile = 1;
        elseif htextXRDFolder == 0
            filenameInfo.xrdFile = 1;
        else
            filenameInfo.xrdFile = 0;
        end
        %}
        
        if EDXFile ~= 0
            if XRDDatabaseFolder ~= 0
                if ECFolder ~= 0                            
                    % all information                            
                    close(fReadInFig);
                    if filenameInfo.xrdFile == 1
                        beginAnalysis(XRDFile, EDXFile, EDXCoordFile, ...
                            ECFolder, XRDDatabaseFolder, filenameInfo);
                    else
                        beginAnalysis(XRDFolder, EDXFile, EDXCoordFile, ...
                            ECFolder, XRDDatabaseFolder, filenameInfo);
                    end
                else
                    % XRD database but no EC folder                             
                    close(fReadInFig);
                    if filenameInfo.xrdFile == 1
                        beginAnalysis(XRDFile, EDXFile, EDXCoordFile, ...
                            1, XRDDatabaseFolder, filenameInfo);
                    else
                        beginAnalysis(XRDFolder, EDXFile, EDXCoordFile, ...
                            1, XRDDatabaseFolder, filenameInfo);
                    end
                end
            elseif ECFolder ~= 0                        
                % EC folder but no XRD database                        
                close(fReadInFig);
                if filenameInfo.xrdFile == 1
                    beginAnalysis(XRDFile, EDXFile, EDXCoordFile, ...
                        ECFolder, 1, filenameInfo);
                else
                    beginAnalysis(XRDFolder, EDXFile, EDXCoordFile, ...
                        ECFolder, 1, filenameInfo);
                end
            else                          
                % neither EC folder nor XRD database                       
                close(fReadInFig);                       
                if filenameInfo.xrdFile == 1
                    beginAnalysis(XRDFile, EDXFile, EDXCoordFile, ...
                        1, 1, filenameInfo);
                else
                    beginAnalysis(XRDFolder, EDXFile, EDXCoordFile, ...
                        1, 1, filenameInfo);
                end
            end
        else
            errordlg('No EDX file selected');
        end
        
    end

    function buttonRestoreFileCallback(obj, evt)
        [restoreFilename, restorePath] = uigetfile;
        restoreFile = strcat(restorePath, restoreFilename);
        set(htextRestoreFile, 'String', restoreFile);
    end

%{
    function buttonSaveRestoreCallback(obj, evt)
        [saveRestoreFilename, saveRestorePath] = uigetfile;
        saveRestoreFile = strcat(saveRestorePath, saveRestoreFilename);
        set(htextSaveRestoreFile, 'String', saveRestoreFile);
    end
%}

    function buttonRestoreCallback(obj, evt)
        if restoreFile ~= 0
            %if saveRestoreFile ~= 0
                close(fReadInFig);
                importAnalysis(restoreFile, saveRestoreFile);
            %else
            %    errordlg('No save file selected');
            %end
        else
            errordlg('No restore file selected');
        end
    end

end

